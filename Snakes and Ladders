
#importing all the libraries
import pygame
import time
import random
import sys
import tkinter as tk
from tkinter import simpledialog

pygame.init()

#initializing variables 
    #screen 
width = 800
height = 600
framrate = pygame.time.Clock()
screen = pygame.display.set_mode((width, height))

pygame.display.set_caption("Snakes and Ladders")

    #images 
design = pygame.image.load('snakeandladders.png')
size = (800, 600)
design = pygame.transform.scale(design, size)
screen.blit(design,(0,0))

die=pygame.image.load('diee.png')
die=pygame.transform.scale(die,(150,50))

player1_image=pygame.image.load('pink.png')
player1_image=pygame.transform.scale(player1_image,(35,35))

player2_image=pygame.image.load('purple.png')
player2_image=pygame.transform.scale(player2_image,(35,35))

player3_image=pygame.image.load('black.png')
player3_image=pygame.transform.scale(player3_image,(35,35))

player4_image=pygame.image.load('blue.png')
player4_image=pygame.transform.scale(player4_image,(35,35))

die_image = [
    pygame.image.load('die 1.png'),
    pygame.image.load('die 2.png'), 
    pygame.image.load('die 3.png'),
    pygame.image.load('die 4.png'),
    pygame.image.load('die 5.png'),
    pygame.image.load('die 6.png')
]

die_image = [pygame.transform.scale(img, (150, 150)) for img in die_image]

rules=pygame.image.load('RULESS.png')
rules=pygame.transform.scale(rules,(800,600))

framrate = pygame.time.Clock()

SLEEP_BETWEEN_ACTIONS = 1
MAX_VAL = 100
DICE_FACE = 6

# snakes beginning and end coordinates
snakes = {
    11: 8,
    17: 7, 
    54: 34,
    62: 19, 
    64: 60,
    65: 57, 
    87: 24,
    93: 73, 
    95: 75,
    98: 79,
}

# ladder beginning and end coordinates
ladders = {
    1: 38, 
    4: 14, 
    9: 31,
    13: 27,
    21: 42,
    24: 44, 
    26: 35,
    28: 84,
    32: 49, 
    51: 67,
    58: 63, 
    69: 72, 
    71: 91,
    78: 83, 
    80: 100, 
}

player_turn_text = [
    "Your turn.",
    "Go.",
    "Please proceed.",
    "Lets win this.",
    "Are you ready?",
    "",
]

snake_bite = [
    "boohoo",
    "bummer",
    "snake bite",
    "oh no",
    "dang"
]

ladder_jump = [
    "woohoo",
    "woww",
    "nailed it",
    "oh my God...",
    "yaayyy"
]

# players intialization
player1_name = ""
player2_name = ""
player3_name = ""
player4_name = "" 

# function to input the player names for each of the four players
def get_player_names(): 
    root = tk.Tk()
    root.withdraw()
    player1_name = simpledialog.askstring("Player 1", "Please enter a valid name for first player:")
    player2_name = simpledialog.askstring("Player 2", "Please enter a valid name for second player:")
    player3_name = simpledialog.askstring("Player 3", "Please enter a valid name for third player:")
    player4_name = simpledialog.askstring("Player 4", "Please enter a valid name for fourth player:")
    root.destroy()
    
    # Handle None values if user cancels dialog
    if player1_name is None:
        player1_name = "Player 1"
    if player2_name is None:
        player2_name = "Player 2"
    if player3_name is None:
        player3_name = "Player 3"
    if player4_name is None:
        player4_name = "Player 4"
    
    return player1_name, player2_name, player3_name, player4_name

#function to display the player names underneath their designated colour
def display_player_names(): 
    global player1_name, player2_name, player3_name, player4_name
    font = pygame.font.Font(None, 30)
    text_colour = (255, 255, 255)

    # player names 
    name1 = font.render(player1_name, True, text_colour) 
    name2 = font.render(player2_name, True, text_colour) 
    name3 = font.render(player3_name, True, text_colour) 
    name4 = font.render(player4_name, True, text_colour) 

    # player positions 
    pos1 = (30, 247)
    pos2 = (30, 327)
    pos3 = (30, 415)
    pos4 = (30, 499)

    screen.blit(name1, pos1)
    screen.blit(name2, pos2)
    screen.blit(name3, pos3)
    screen.blit(name4, pos4)

    pygame.display.update()

#function to roll the dice randomly and get the value
def get_dice_value(current_player):
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    dice_value = random.randint(1, DICE_FACE)
    screen.blit(design,(0,0))
    screen.blit(die_image[dice_value - 1], (40, 20))
    font = pygame.font.Font(None, 75)
    text_color = (0, 0, 0)  
    background_color = (246, 236, 215)
    text = font.render(current_player+" rolled a "+str(dice_value), True, text_color, background_color)
    text_rect = text.get_rect(center=(width // 2, height // 2))
    screen.blit(text, text_rect)
    pygame.display.update()
    return dice_value

#function to display any given message on the screen
def display_message(message, submessage): 
    font = pygame.font.Font(None, 40)
    subfont = pygame.font.Font(None, 40)
    
    text_colour = (0, 0, 0)  
    background_colour = (232, 236, 215)
    
    text = font.render(message, True, text_colour, background_colour) 
    subtext= font.render(submessage, True, text_colour, background_colour)
    
    screen.blit(text, (width // 2 - text.get_width() // 2, height // 2 -            text.get_height() // 2 - 30))

    screen.blit(subtext, (width // 2 - (text.get_width())*1.65, height // 2 -text.get_height() // 2 + 30))
    
    pygame.display.update()
    time.sleep(1)

#function to display a message if someone got a snake bite
def got_snake_bite(old_value, current_value, player_name):
    message = random.choice(snake_bite).upper() 
    submessage = player_name + " got a snake bite. Down from " + str(old_value) + " to " + str(current_value)
    display_message(message, submessage)

#function to display a message if someone landed on a ladder
def got_ladder_jump(old_value, current_value, player_name):
    message = random.choice(ladder_jump).upper()
    submessage = player_name + " climbed the ladder from " + str(old_value) + " to " + str(current_value)
    display_message(message, submessage)

#function to change the current value to a new value depending on where they roll
def snake_ladder(player_name, current_value, dice_value):
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    old_value = current_value
    current_value = current_value + dice_value
    
    if current_value > MAX_VAL:
        message="You need " + str(MAX_VAL - old_value) + " to win this game. Keep trying."
        display_message("",message)
        return old_value

    print("\n" + player_name + " moved from " + str(old_value) + " to " + str(current_value))
    if current_value in snakes:
        final_value = snakes.get(current_value)
        got_snake_bite(current_value, final_value, player_name)

    elif current_value in ladders:
        final_value = ladders.get(current_value)
        got_ladder_jump(current_value, final_value, player_name)


    else:
        final_value = current_value

    return final_value

#function to check if someone won the game
def check_win(player_name, display_current_position):
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    if display_current_position == MAX_VAL:
        winning_msg = [ "Thats it.\n\n" + player_name + " won the game.",
                       "Congratulations " + player_name,
                       "Game over. We have a winner...!"+player_name+"Great job!",
                       player_name+"You're the first one to the end! You win!!!!! :)"
                      ]
        winning_msg = random.choice(winning_msg)
        submessage = "Thank you for playing the game. Please visit https://www.pythoncircle.com"
        display_message(winning_msg, submessage)
        time.sleep(SLEEP_BETWEEN_ACTIONS)
        sys.exit(0)

#function to display the players on the board
def players_on_board(current_value):
    if current_value>=1 and current_value<=10:
        x_coor=243
        y_coor=500
        for x in range (current_value):
            x_coor=x_coor+51
    elif current_value>=11 and current_value<=20:
        y_coor=450
        x_coor=740
        current_value=current_value-10
        if current_value==1:
            pass
        else:
            for x in range (current_value-1):
                x_coor=x_coor-51
    elif current_value>=21 and current_value<=30:
        y_coor=402
        x_coor=243
        current_value=current_value-20
        for x in range (current_value):
            x_coor=x_coor+51
    elif current_value>=31 and current_value<=40:
        y_coor=352
        x_coor=740
        current_value=current_value-30
        if current_value==1:
            pass
        else:
            for x in range (current_value-1):
                x_coor=x_coor-51
    elif current_value>=41 and current_value<=50:
        y_coor=299
        x_coor=243
        current_value=current_value-40
        for x in range (current_value):
            x_coor=x_coor+51
    elif current_value>=51 and current_value<60:
        y_coor=253
        x_coor=740
        current_value=current_value-50
        if current_value==1:
            pass
        else:
            for x in range (current_value-1):
                x_coor=x_coor-51
    elif current_value>=61 and current_value<=70:
        y_coor=202
        x_coor=243
        current_value=current_value-60
        for x in range (current_value):
            x_coor=x_coor+51

    elif current_value>=71 and current_value<=80:
        y_coor=151
        x_coor=740
        current_value=current_value-70
        if current_value==1:
                pass
        else:
            for x in range (current_value-1):
                x_coor=x_coor-51
    elif current_value>=81 and current_value<=90:
        y_coor=104
        x_coor=243
        current_value=current_value-80
        for x in range (current_value):
            x_coor=x_coor+51

    elif current_value>=91 and current_value<=100:
        y_coor=53
        x_coor=740
        current_value=current_value-90
        if current_value==1:
            pass
        else:
            for x in range (current_value-1):
                x_coor=x_coor-51
    else:
        x_coor = 0
        y_coor = 0
    return x_coor,y_coor

player1_current_position = 0
player2_current_position = 0
player3_current_position = 0 
player4_current_position = 0 

x1,y1=243,506
x2,y2=196,506
x3,y3=156,506
x4,y4=107,510

#function to display the current position of all of the players
def display_current_position(p1,p2,p3,p4):
    pink_pos=(93,201)
    purple_pos=(112,292)
    black_pos=(105,376)
    blue_pos=(98,457)

    font = pygame.font.Font(None, 25)
    text_colour = (255, 255, 0)
    position_1 = font.render("Current Position "+str(p1), True, text_colour) 
    position_2= font.render("Current Position "+str(p2), True, text_colour) 
    position_3= font.render("Current Position "+str(p3), True, text_colour) 
    position_4= font.render("Current Position "+str(p4), True, text_colour)
    screen.blit(position_1,pink_pos)
    screen.blit(position_2,purple_pos)
    screen.blit(position_3,black_pos)
    screen.blit(position_4,blue_pos)

mark=0
mark2=0

#the game loop for snake and ladders
while True:
    if mark==0:
        player1_name, player2_name, player3_name, player4_name = get_player_names()
        time.sleep(SLEEP_BETWEEN_ACTIONS)
        mark=1
    while mark2==0:
        screen.blit(rules,(0,0))
        pygame.display.update()
        for event in pygame.event.get():
            (x,y)=pygame.mouse.get_pos()
            if event.type == pygame.MOUSEBUTTONDOWN:
                print (x,y)
                if (x>=85 and x<=714) and (y>=423 and y<=523):
                    mark2=1
                    
        
    screen.blit(design,(0,0))
    display_player_names()
    screen.blit(player1_image,(x1,y1))
    screen.blit(player2_image,(x2,y2))
    screen.blit(player3_image,(x3,y3))
    screen.blit(player4_image,(x4,y4))
    display_current_position(player1_current_position,player2_current_position,player3_current_position,player4_current_position)

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()
    time.sleep(SLEEP_BETWEEN_ACTIONS)

    # player 1 dice roll interaction  
    user_roll=False #initializing user roll 
    dice_value = 1  # Initialize dice_value
    while user_roll==False: #waiting for the roll 
        screen.blit(die,(330, 547))
        screen.blit(die_image[0], (40, 20))

        #displaying player name and die
        font = pygame.font.Font(None, 50)
        text_color = (128, 0, 128)  
        background_color = (246, 236, 215)

        text = font.render("Player: "+player1_name, True, text_color, background_color)
        text_rect = text.get_rect()
        text_rect.bottomleft = (10, height - 10)
        screen.blit(text, text_rect)
        pygame.display.update()

        #event handling 
        for event in pygame.event.get():
            (x,y)=pygame.mouse.get_pos()
            if event.type == pygame.MOUSEBUTTONDOWN:
                print (x,y)
                if (x>=332 and x<=479) and (y>=545 and y<=592):
                    dice_value = get_dice_value(player1_name)
                    user_roll=True

    time.sleep(SLEEP_BETWEEN_ACTIONS)
    pygame.time.wait(3000)
    screen.blit(design,(0,0))
    display_player_names()
    #reset and put the positions of all the characters here too

    print(player1_name + " moving....")
    player1_current_position = snake_ladder(player1_name, player1_current_position, dice_value)
    x1,y1=players_on_board(player1_current_position)
    screen.blit(player1_image,(x1,y1))
    screen.blit(player2_image,(x2,y2))
    screen.blit(player3_image,(x3,y3))
    screen.blit(player4_image,(x4,y4))
    display_current_position(player1_current_position,player2_current_position,player3_current_position,player4_current_position)


    check_win(player1_name, player1_current_position)

    # player 2 dice roll interaction  
    user_roll=False
    dice_value = 1  # Initialize dice_value
    while user_roll==False:
        screen.blit(die,(330, 547))

        font = pygame.font.Font(None, 50)
        text_color = (128, 0, 128)  
        background_color = (246, 236, 215)

        text = font.render("Player: "+player2_name, True, text_color, background_color)
        text_rect = text.get_rect()
        text_rect.bottomleft = (10, height - 10)
        screen.blit(text, text_rect)

        pygame.display.update()

        for event in pygame.event.get():
            (x,y)=pygame.mouse.get_pos()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if (x>=332 and x<=479) and (y>=545 and y<=592):
                    dice_value = get_dice_value(player2_name)
                    user_roll=True
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    pygame.time.wait(3000)
    screen.blit(design,(0,0))
    display_player_names()

    #reset and put the positions of all the characters here too

    print(player2_name + " moving....")
    player2_current_position = snake_ladder(player2_name, player2_current_position, dice_value)
    x2,y2=players_on_board(player2_current_position)
    screen.blit(player1_image,(x1,y1))
    screen.blit(player2_image,(x2,y2))
    screen.blit(player3_image,(x3,y3))
    screen.blit(player4_image,(x4,y4))
    display_current_position(player1_current_position,player2_current_position,player3_current_position,player4_current_position)

    check_win(player2_name, player2_current_position)

    # player 3 dice roll interaction  
    user_roll=False
    dice_value = 1  # Initialize dice_value
    while user_roll==False:
        screen.blit(die,(330, 547))

        font = pygame.font.Font(None, 50)
        text_color = (128, 0, 128)  
        background_color = (246, 236, 215)

        text = font.render("Player: "+player3_name, True, text_color, background_color)
        text_rect = text.get_rect()
        text_rect.bottomleft = (10, height - 10)
        screen.blit(text, text_rect)
        pygame.display.update()

        for event in pygame.event.get():
            (x,y)=pygame.mouse.get_pos()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if (x>=332 and x<=479) and (y>=545 and y<=592):
                    dice_value = get_dice_value(player3_name)
                    user_roll=True
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    pygame.time.wait(3000)
    screen.blit(design,(0,0))
    display_player_names()
    #reset and put the positions of all the characters here too

    print(player3_name + " moving....")
    player3_current_position = snake_ladder(player3_name, player3_current_position, dice_value)
    x3,y3=players_on_board(player3_current_position)
    screen.blit(player1_image,(x1,y1))
    screen.blit(player2_image,(x2,y2))
    screen.blit(player3_image,(x3,y3))
    screen.blit(player4_image,(x4,y4))
    display_current_position(player1_current_position,player2_current_position,player3_current_position,player4_current_position)

    check_win(player3_name, player3_current_position)

    # player 4 dice roll interaction  
    user_roll=False
    dice_value = 1  # Initialize dice_value
    while user_roll==False:
        screen.blit(die,(330, 547))

        font = pygame.font.Font(None, 50)
        text_color = (128, 0, 128)  
        background_color = (246, 236, 215)

        text = font.render("Player: "+player4_name, True, text_color, background_color)
        text_rect = text.get_rect()
        text_rect.bottomleft = (10, height - 10)
        screen.blit(text, text_rect)
        pygame.display.update()

        for event in pygame.event.get():
            (x,y)=pygame.mouse.get_pos()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if (x>=332 and x<=479) and (y>=545 and y<=592):
                    dice_value = get_dice_value(player4_name)
                    user_roll=True
    time.sleep(SLEEP_BETWEEN_ACTIONS)
    pygame.time.wait(3000)
    screen.blit(design,(0,0))
    display_player_names()
    #reset and put the positions of all the characters here too

    print(player4_name + " moving....")
    player4_current_position = snake_ladder(player4_name, player4_current_position, dice_value)
    x4,y4=players_on_board(player4_current_position)
    screen.blit(player1_image,(x1,y1))
    screen.blit(player2_image,(x2,y2))
    screen.blit(player3_image,(x4,y4))
    screen.blit(player4_image,(x4,y4))
    display_current_position(player1_current_position,player2_current_position,player3_current_position,player4_current_position)
    check_win(player4_name, player4_current_position)

    time.sleep(SLEEP_BETWEEN_ACTIONS)
    pygame.time.wait(3000)
    screen.blit(design,(0,0))
    framrate.tick(20)
    pygame.display.update()
